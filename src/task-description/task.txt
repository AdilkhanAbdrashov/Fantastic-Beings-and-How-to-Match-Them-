Looking for fantastic beings

Description
It's time to put creatures on the map! During the game, we should have two basic scenarios when creatures appear:

When the game starts;

When creatures are aligned â€” in this case, no need to redraw the entire field, only fill in the empty cells.

In what order should the creatures be arranged? Random can take care of that! Fill the map with random animals from the list of 5: Zouwu, Swooping, Salamander, Puffskein, and Kelpie :)

Objectives
Based on this graphic, create an array of possible creatures that can be put on the map (there are 5 of them);

Create a new method to randomly fill the map with creatures. The method should add creatures only to the empty cells of the map, ensuring that each cell can contain only one creature. You can use nested for loops or another method to iterate over the cells.

Make the creatures appear on the map immediately after the map appears on the screen.

Each cell must have a data-being attribute in which you need to write the name of the creature that lives in that cell- see the example for more details.

Each img inside the cell must have the data-coords attribute, in which you need to enter its coordinate in the xN_yM format - see the example for more details.

Write a window.redrawMap method that accepts an array of creatures as a parameter (the array size must be at least 3x3). You can use nested for loops to render the creatures onto the map based on the provided array. If the array is valid and the map renders correctly, return true. If the array is invalid (e.g., the wrong size or format), return false.

You may use multidimensional arrays to represent the map and the position of creatures. Also, make sure the width and height of the table match the size of the longest row in the array and the number of rows. Use a nested for loop to iterate over each cell of the map.

Examples
Example 1: map before adding creatures

...
<tr class="row">
<td class="cell"></td>
<td class="cell"></td>
<td class="cell"></td>
<td class="cell"></td>
<td class="cell"></td>
</tr>
...

map once the creatures have been added

...
<tr class="row">
<td class="cell" data-being="kelpie">
<img data-coords="x0_y0" src="images/kelpie.png">
</td>
<td class="cell" data-being="kelpie">
<img data-coords="x1_y0" src="images/kelpie.png">
</td>
<td class="cell" data-being="puffskein">
<img data-coords="x2_y0" src="images/puffskein.png">
</td>
<td class="cell" data-being="kelpie">
<img data-coords="x3_y0" src="images/kelpie.png">
</td>
<td class="cell" data-being="swooping">
<img data-coords="x4_y0" src="images/swooping.png">
</td>
</tr>
...

graphic representation of the game board

(open img1 in this folder)

Example 2: filling the map using the method window.redrawMap

window.redrawMap([
    ['kelpie', 'puffskein', 'puffskein'],
    ['swooping', 'zouwu', 'puffskein'],
    ['kelpie', 'puffskein', 'zouwu']
]);

map once the creatures have been added by method above

(open img2 in this folder)